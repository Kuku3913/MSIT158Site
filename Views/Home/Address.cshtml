﻿
@{
    ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="selectCity">
@*  <option value="a">Item1</option>
    <option value="b">Item2</option>
    <option value="c">Item3</option>
    <option value="d">Item4</option>*@
</select>
<select id="selectDistricts"></select>
<select id="selectRoads"></select>
<span id="spanAddress"></span>

@section Styles{
    <style>


    </style>
}
@section Scripts{
    <script>
        const selCity = document.querySelector('#selectCity');
        const selDistricts = document.querySelector('#selectDistricts');
        const selRoads = document.querySelector('#selectRoads');
        const spnAddress = document.querySelector('#spanAddress');

        //載入鄉鎮區
        const loadDistricts = async () => {
            //console.log();
            //console.log(selCity.selectedIndex);
            //console.log(selCity.options[selCity.selectedIndex].value);
            //console.log(selCity.options[selCity.selectedIndex].text);
            //@Url.Content("~/api/districts")  => /api/districts
            //  const url = '@Url.Content("~/api/districts")?city=' + selCity.value;
            const url = `@Url.Content("~/api/districts")?city=${selCity.value}`;

            //console.log(url);
            const response = await fetch(url);
            const datas = await response.json();

            const districts = datas.map(district => `<option value="${district}">${district}</option>`);


            selDistricts.innerHTML = districts.join("");


            loadRoads();


        }
        //載入路名
        const loadRoads = async () => {

            const url = `@Url.Content("~/api/roads")?districts=${selDistricts.value}`;

            const response = await fetch(url);
            const datas = await response.json();

            const roads = datas.map(road => `<option value="${road}">${road}</option>`);


            selRoads.innerHTML = roads.join("");


            loadAddress();


        }

        const loadAddress = () => {
            spnAddress.textContent = `住址：${selDistricts.value}${selRoads.value}`;
        }
        //ajax
        (async () => {
            const response = await fetch('@Url.Content("~/api/cities")');
            const datas = await response.json();//得到json檔 用JavaScript解析
            //使用JavaScript的MAP方法，得出的值是一個陣列(cities是陣列)
            const cities = datas.map(city => `<option value="${city}">${city}</option>`);
            selCity.innerHTML = cities.join("");//使用陣列的方法join用於將陣列的所有元素連接成一個字符串。你可以指定一個分隔符來分隔每個元素。如果未指定分隔符，預設分隔符為逗號（,）。
            loadDistricts();

        })();



        selCity.addEventListener('change', loadDistricts);
        selDistricts.addEventListener('change', loadRoads);
        selRoads.addEventListener('change', loadAddress);
    </script>
}