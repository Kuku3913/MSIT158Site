
@{
    ViewData["Title"] = "First";
}

<h1>First Ajax Demo</h1>
<button id="buttonStart" class="btn btn-primary">Ajax 開始</button>
<button id="buttonStop" class="btn btn-warning">Ajax 停止</button>
<img src="~/images/Plant.gif" id="img1" style="display:none" />
<div id="div1"></div>

@section Scripts {
    <script>
        const btn = document.querySelector('#buttonStart');
        const btnStop = document.querySelector('#buttonStop');
        const myDiv = document.querySelector('#div1');
        const imgLoading = document.querySelector('#img1');
        let abortController;
        btnStop.addEventListener('click', () => {
            if (abortController) {
                abortController.abort();
            }
        })

        btn.addEventListener('click', async () => {
            //myDiv.textContent='button click'
            //console.log('click');

            //ajax程式
            //==== 方法二 ===
            try {
                imgLoading.style.display = "inline" //顯示執行的圖片
                btn.setAttribute('disabled', 'disabled'); //讓按鈕不能使用

                //取消ajax程式的執行
                abortController = new AbortController();
                const signal = abortController.signal;

                setTimeout(() => {
                    abortController.abort();
                }, 5000);

                //ajax 程式
                const response = await fetch('@Url.Content("~/api/index")', { signal });
                const data = await response.text();
                if (!response.ok) throw new Error(`錯誤代碼：${response.status}`);
                myDiv.innerHTML = `<h2>${data}</h2>`;
            } catch (error) {
                myDiv.innerHTML = `<h2>${error.message}</h2>`;
            } finally {
                imgLoading.style.display = "none" //隱藏執行的圖片
                btn.removeAttribute('disabled'); //讓按鈕可以按
            }


            //console.log(fetch('/api/index'));//Promise物件
            //console.log(fetch('@Url.Content("~/api/index")'));

            //==== 方法一 ===
            //fetch('@Url.Content("~/api/index")')
            //         //使用then讀取promise物件
            //        .then(response =>{                
            //            console.log(response);
            //            response.headers.forEach((value,name)=>{
            //                console.log(`${name}:${value}`);
            //            })

            //         console.log(response.ok);
            //         console.log(response.body);
            //         if (response.ok){
            //              return response.text(); 
            //         }
            //        //console.log(response.text());//Promise物件
            //       //text()取得文字資料
            //        })
            //        .then(data => {   //使用then讀取promise物件
            //        myDiv.innerHTML = `<h2>${data}</h2>`;
            //        })
        })
    </script>
}

@section Styles{
    <style>

    </style>
}

